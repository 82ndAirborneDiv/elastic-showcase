========= Elasticsearch Clean Setup Process =============

1. Create empty index:

curl -XPUT 'localhost:9200/prepared_responses/'

2. Close the index:

curl -XPOST 'localhost:9200/prepared_responses/_close'

3. Add Mapping:

curl -XPUT 'http://localhost:9200/prepared_responses/prepared_responses/_mapping' -d '
{
  "prepared_responses": {
          "properties": {
            "category": {
              "type": "string"
            },
            "commonQuestionRanking": {
              "type": "long"
            },
            "dateModified": {
              "format": "strict_date_optional_time||epoch_millis",
              "type": "date"
            },
            "datePublished": {
              "format": "strict_date_optional_time||epoch_millis",
              "type": "date"
            },
            "featuredRanking": {
              "type": "long"
            },
            "id": {
              "type": "long"
            },
            "keywords": {
              "type": "string"
            },
            "language": {
              "type": "string"
            },
            "prId": {
              "type": "long"
            },
            "title": {
              "type": "string",
              "fields": {
                "en": {
                  "type":     "string",
                  "analyzer": "english"
                }
              }
            },
            "description": {
              "type": "string",
              "fields": {
                "en": {
                  "type":     "string",
                  "analyzer": "english"
                }
              }
            },
            "smartTag": {
              "type": "string"
            },
            "subtopic": {
              "type": "string"
            },
            "tier": {
              "type": "string"
            },
            "topic": {
              "type": "string"
            }
          }
        }
}'

4. Open index: 

curl -XPOST 'localhost:9200/prepared_responses/_open'

5. Load data:

node load_PR_formatted.js

6. Create alias for index:

curl -XPUT 'localhost:9200/prepared_responses/_alias/prepared_responses_alias'

=========================================================

curl -XPOST 'localhost:9200/prepared_responses/_close'


// add config

curl -XPUT 'localhost:9200/prepared_responses/'
{
  "settings": {
    "index": {
      "analysis": {
        "filter": {
          "stemmer": {
            "type": "stemmer",
            "language": "english"
          },
          "autocompleteFilter": {
            "max_shingle_size": "5",
            "min_shingle_size": "2",
            "type": "shingle"
          },
          "stopwords": {
            "type": "stop",
            "stopwords": [
              "_english_"
            ]
          }
        },
        "analyzer": {
          "didYouMean": {
            "filter": [
              "lowercase"
            ],
            "char_filter": [
              "html_strip"
            ],
            "type": "custom",
            "tokenizer": "standard"
          },
          "autocomplete": {
            "filter": [
              "lowercase",
              "autocompleteFilter"
            ],
            "char_filter": [
              "html_strip"
            ],
            "type": "custom",
            "tokenizer": "standard"
          },
          "default": {
            "filter": [
              "lowercase",
              "stopwords",
              "stemmer"
            ],
            "char_filter": [
              "html_strip"
            ],
            "type": "custom",
            "tokenizer": "standard"
          }
        }
      }
    }
  }
}'

// update config
curl -XPUT 'localhost:9200/prepared_responses/_settings' -d '{
  "settings": {
    "index": {
      "analysis": {
        "filter": {
          "stemmer": {
            "type": "stemmer",
            "language": "english"
          },
          "autocompleteFilter": {
            "max_shingle_size": "5",
            "min_shingle_size": "2",
            "type": "shingle"
          },
          "stopwords": {
            "type": "stop",
            "stopwords": [
              "_english_"
            ]
          }
        },
        "analyzer": {
          "didYouMean": {
            "filter": [
              "lowercase"
            ],
            "char_filter": [
              "html_strip"
            ],
            "type": "custom",
            "tokenizer": "standard",
            "stopwords" : ["have"]
          },
          "autocomplete": {
            "filter": [
              "lowercase",
              "autocompleteFilter"
            ],
            "char_filter": [
              "html_strip"
            ],
            "type": "custom",
            "tokenizer": "standard"
          },
          "default": {
            "filter": [
              "lowercase",
              "stopwords",
              "stemmer"
            ],
             "char_filter": [
              "html_strip"
            ],
            "type": "custom",
            "tokenizer": "standard"
          }
        }
      }
    }
  }
}'



// add mapping

curl -XPUT 'http://localhost:9200/prepared_responses/prepared_responses/_mapping' -d '
{
  "prepared_responses": {
    "properties": {

      "query": {
        "type": "string",
        "copy_to": [
          "did_you_mean",
          "autocomplete",
          "all_search_fields"
        ]
      },

      "response": {
        "type": "string",
        "copy_to": [
          "autocomplete",
          "did_you_mean",
          "all_search_fields"
        ]
      },
       "keywords": {
        "type": "string",
        "copy_to": [
          "autocomplete",
          "did_you_mean",
          "all_search_fields"
        ]
      },
      "did_you_mean": {
              "type": "string",
              "analyzer": "didYouMean"
      },
      "autocomplete": {
        "type": "string",
        "analyzer": "autocomplete"
      },
      "all_search_fields" :{
        "type" : "string"
      }
    }
  }
}'

curl -XPOST 'localhost:9200/prepared_responses/_open'

///////////  test index

curl -XPOST 'localhost:9200/prepared_responses_test/_close'

// add config

curl -XPUT 'localhost:9200/prepared_responses_test/'
{
  "settings": {
    "index": {
      "analysis": {
        "filter": {
          "stemmer": {
            "type": "stemmer",
            "language": "english"
          },
          "autocompleteFilter": {
            "max_shingle_size": "5",
            "min_shingle_size": "2",
            "type": "shingle"
          },
          "stopwords": {
            "type": "stop",
            "stopwords": [
              "_english_"
            ]
          }
        },
        "analyzer": {
          "didYouMean": {
            "filter": [
              "lowercase"
            ],
            "char_filter": [
              "html_strip"
            ],
            "type": "custom",
            "tokenizer": "standard"
          },
          "autocomplete": {
            "filter": [
              "lowercase",
              "autocompleteFilter"
            ],
            "char_filter": [
              "html_strip"
            ],
            "type": "custom",
            "tokenizer": "standard"
          },
          "default": {
            "filter": [
              "lowercase",
              "stopwords",
              "stemmer"
            ],
            "char_filter": [
              "html_strip"
            ],
            "type": "custom",
            "tokenizer": "standard"
          }
        }
      }
    }
  }
}'

// update config
curl -XPUT 'localhost:9200/prepared_responses_test/_settings' -d '{
  "settings": {
    "index": {
      "analysis": {
        "filter": {
          "stemmer": {
            "type": "stemmer",
            "language": "english"
          },
          "autocompleteFilter": {
            "max_shingle_size": "5",
            "min_shingle_size": "2",
            "type": "shingle"
          },
          "stopwords": {
            "type": "stop",
            "stopwords": [
              "_english_"
            ]
          },
        "analyzer": {
          "didYouMean": {
            "filter": [
              "lowercase"
            ],
            "char_filter": [
              "html_strip"
            ],
            "type": "custom",
            "tokenizer": "standard",
            "stopwords" : ["have"]
          },
          "autocomplete": {
            "filter": [
              "lowercase",
              "autocompleteFilter"
            ],
            "char_filter": [
              "html_strip"
            ],
            "type": "custom",
            "tokenizer": "standard"
          },
          "soundex" : {
            "filter": [
                        "standard",
                        "lowercase",
                        "my_metaphone"
                      ],
            "char_filter" : ["html_strip"],
            "tokenizer": "standard"
          },
          "default": {
            "filter": [
              "lowercase",
              "stopwords",
              "stemmer"
            ],
             "char_filter": [
              "html_strip"
            ],
            "type": "custom",
            "tokenizer": "standard"
          }
        }
      }
    }
  }
}'



// add mapping

curl -XPUT 'http://localhost:9200/prepared_responses/prepared_responses_test/_mapping' -d '
{
  "prepared_responses_test": {
    "properties": {

      "question": {
        "type": "string",
        "copy_to": [
          "did_you_mean",
          "autocomplete",
          "all_search_fields"
        ]
      },

      "response": {
        "type": "string",
        "copy_to": [
          "autocomplete",
          "did_you_mean",
          "all_search_fields"
        ]
      },
       "keywords": {
        "type": "string",
        "copy_to": [
          "autocomplete",
          "did_you_mean",
          "all_search_fields"
        ]
      },
      "did_you_mean": {
              "type": "string",
              "analyzer": "didYouMean"
      },
      "autocomplete": {
        "type": "string",
        "analyzer": "autocomplete"
      },
      "all_search_fields" :{
        "type" : "string"
      }
    }
  }
}'

curl -XPOST 'localhost:9200/prepared_responses_test/_open'
